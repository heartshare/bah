worker_processes  1;

events {
    worker_connections  1024;
}


http {
  #include       lua/mime.types;
  default_type  application/octet-stream;

  sendfile        on;
  keepalive_timeout  65;
  gzip  on;

  access_log /dev/stderr;
  error_log /dev/stderr;
  lua_code_cache off;

  lua_package_path "./lua/?.lua;;";
  init_by_lua_block {
    json = require 'cjson' 
  }

  server {
    listen       80;
    server_name  localhost;
    index        index.html;
    default_type text/html;
    root         /home/rogon/bah-url-shortner/public;

    location ~ /(.*) {
      content_by_lua_block {
        local short_url = ngx.var.args[1]; 
        ngx.say('Hello World ' .. short_url);
      }
    }

    location /s {
      content_by_lua_block {
        local shorten = function(long_url)
          local s = ""
          local cz= {"a", "b", "c", "d", "e", "f", "g", "h", "j", "k", "l", "v", 
                           "m", "n", "o", "p", "q", "r", "s", "t", "w", "x", "y", "z" }
          math.randomseed(os.time() + math.random(0, 100000))
          for _ = 1, 6, 1 do
            local index = math.random(1, #cz) 
            s = s .. cz[index] 
          end
          return s
        end

        local args = ngx.req.get_uri_args()
        local long_url = args['url']
        if not long_url then return ngx.say('Missing Url') end

        local short_url = shorten(long_url) 
        ngx.say('https://bah.my/' .. short_url)
      }
    } 
  }
}
